// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PBMessage.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - PbmessageRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PbmessageRoot : GPBRootObject
@end

#pragma mark - pbmessage

typedef GPB_ENUM(pbmessage_FieldNumber) {
  pbmessage_FieldNumber_Srcid = 1,
  pbmessage_FieldNumber_Dstid = 2,
  pbmessage_FieldNumber_Packettype = 3,
  pbmessage_FieldNumber_Bodytype = 4,
  pbmessage_FieldNumber_Srccts = 5,
  pbmessage_FieldNumber_Serverid = 6,
  pbmessage_FieldNumber_Srcdeviceid = 7,
  pbmessage_FieldNumber_Status = 8,
  pbmessage_FieldNumber_Cts = 9,
  pbmessage_FieldNumber_Fromname = 10,
  pbmessage_FieldNumber_Body = 11,
};

@interface pbmessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *srcid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *dstid;

@property(nonatomic, readwrite) int32_t packettype;

@property(nonatomic, readwrite) int32_t bodytype;

@property(nonatomic, readwrite) int64_t srccts;

@property(nonatomic, readwrite) int64_t serverid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *srcdeviceid;

@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) int64_t cts;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fromname;

@property(nonatomic, readwrite, copy, null_resettable) NSData *body;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
